#!/bin/sh
#
#  Wrapper script for SGE job submission
#
qsubout=.qsub$$

HOST=`hostname`
PATH=$PATH:/usr/bin:/bin:/usr/sbin:/usr/bsd:/usr/local/bin

# Get QPATH and QSUB settings from the config file
curdir=`echo "$0" | sed -e 's#/[^/]*$##'`
if [ -f "$curdir/config" ]; then
  . "$curdir/config"
else
  echo "ERROR: The '$curdir/config' file is missing."
  exit 1
fi

if [ -n "$QPROFILE" ]; then
  if [ -f "$QPROFILE" ]; then
    . "$QPROFILE"
  elif [ -z "$SGE_ROOT" ]; then
    echo "ERROR: Setup script \"$QPROFILE\" not found."
    exit 1
  fi
fi 

if [ -n "$QPATH" ]; then
  PATH=$QPATH:$PATH
fi

# Verify commandline args
if [ $# -gt 0 ]; then
  script="$1"
  shift
else
  echo "ERROR: Usage:   submit <script> [<options>]"
  exit 1
fi

ARGS=""
QLOG=""
ARRAY=""
LICENSE_ARGS=""
while [ $# -gt 0 ]; do
  case "$1" in
    -lic) LICENSE_ARGS="$LICENSE_ARGS -l $2"
          shift 2 ;;
  -array) ARRAY="$2"
          ARGS="$ARGS -t $ARRAY"
          shift 2 ;;
      -o) QLOG="$2"
          shift 2 ;;
       *) ARGS="$ARGS \"$1\"" 
          shift ;;
  esac
done

if [ -n "$QLOG" ]; then
  touch "$QLOG" 2>&- || QLOG="/dev/null"
  ARGS="$ARGS -o '$QLOG'"
fi

if [ -z "$LICENSE_CHECKING" ]; then
  LICENSE_ARGS=""
else
  LICENSE_ARGS="-hard $LICENSE_ARGS -v LICENSE_CHECKING=yes"
fi
  
if [ "$script" != "-" -a ! -f "$script" ]; then
  echo "ERROR: File not found: \"$script\""
  exit 1
fi

if [ -z "`which $QSUB 2>/dev/null`" -a ! -x "$QPATH/$QSUB" -a ! -x "$QSUB" ]; then
  echo "ERROR: Submission command \"$QSUB\" on host \"$HOST\" not found."
  echo "ERROR: (i) Is the Host: field in your schrodinger.hosts entry correct?"
  echo "ERROR: (ii) Are the QPATH and QSUB settings in $curdir/config correct?"
  exit 1
fi

# Submit job
if [ "$script" = "-" ]; then
  echo ">> $QSUB $QARGS $ARGS $LICENSE_ARGS -S /bin/sh > $qsubout"
  eval $QSUB $QARGS $ARGS $LICENSE_ARGS -S /bin/sh > $qsubout 
else
  echo ">> $QSUB $QARGS $ARGS $LICENSE_ARGS -S /bin/sh \"$script\" > $qsubout < /dev/null"
  eval $QSUB $QARGS $ARGS $LICENSE_ARGS -S /bin/sh \"$script\" > $qsubout < /dev/null
fi

if [ $? = 0 ]; then
    # Parse job id from output "your job <jobid> ... has been submitted" 
    batchid=`head -1 $qsubout | awk '{print $3}' | sed 's!\..*!!'`
    if [ -n "$batchid" ]; then
        echo "BatchId: $batchid"
        rm $qsubout
        exit 0
    fi
fi

# Job submission apparently failed
cat $qsubout | sed 's/\(.*\)/ERROR: \1/'
rm $qsubout
exit 1
